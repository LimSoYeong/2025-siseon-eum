import React, { useEffect, useRef, useState } from 'react';

const CameraCapture = () => {
  const [serverURL, setServerURL] = useState('');
  const [imageURL, setImageURL] = useState(null);
  const videoRef = useRef(null);
  const canvasRef = useRef(null);

  useEffect(() => {
    const backendIP = window.location.hostname; // 10.221.251.18 등
    fetch(`https://${backendIP}:5000/ip`)
      .then((res) => res.json())
      .then((data) => {
        const fullURL = `https://${data.ip}:${data.port}`;
        setServerURL(fullURL);
      })
      .catch((err) => {
        console.error(':x: 서버 연결 실패:', err);
      });
  }, []);

  const startCamera = async () => {
    try {
      alert('fullURL');
      const stream = await navigator.mediaDevices.getUserMedia({ video: true });
      videoRef.current.srcObject = stream;
    } catch (err) {
      alert('카메라 권한이 없거나 접근 실패');
    }
  };

  const capturePhoto = () => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext('2d');
    ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);
    canvas.toBlob(async (blob) => {
      const formData = new FormData();
      formData.append('photo', blob, 'photo.jpg');
      const res = await fetch(`${serverURL}/upload`, {
        method: 'POST',
        body: formData,
      });
      const data = await res.json();
      console.log(":플래시가_깜박이는_카메라: 업로드 결과 URL:", data.url);  // :왼쪽을_가리키는_손_모양: 여기를 추가!
      setImageURL(data.url);
    }, 'image/jpeg');
  };

  return (
    <div>
      <h2>:플래시가_깜박이는_카메라: 카메라 캡처</h2>
      <video ref={videoRef} autoPlay width="320" height="240" />
      <br />
      <button onClick={startCamera}>카메라 시작</button>
      <button onClick={capturePhoto}>촬영 및 업로드</button>
      <canvas ref={canvasRef} width="320" height="240" style={{ display: 'none' }} />
      {imageURL && (
        <div>
          <p>:열린_파일_폴더: 서버 저장 이미지:</p>
          <img src={imageURL} alt="Captured" width="200" />
        </div>
      )}
    </div>
  );
};

export default CameraCapture;